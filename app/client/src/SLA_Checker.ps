param (
    [string]$directory,
    [string]$address
)

Write-Host "Initiating connection to $address and watching folder $directory"

function Invoke-ApiPostRequest {
    param(
        [string]$Url,
        [hashtable]$Body
    )

    $headers = @{
        "Content-Type" = "application/json"
    }

    $bodyJson = $Body | ConvertTo-Json -Depth 4

    try {
        $response = Invoke-RestMethod -Uri $Url -Method Post -Headers $headers -Body $bodyJson
        return $response
    }
    catch {
        Write-Error "Error invoking API: $_"
        return $null
    }
}

# Get a list of all directories in the specified directory
$directories = Get-ChildItem -Path $directory -Directory
$sla_error_array = @()
# Loop through each directory
foreach ($dir in $directories) {
    # Get the path to the SLA file in the current directory
    $slaFilePath = Join-Path -Path $dir.FullName -ChildPath "ToBeProcessedBefore"

    # Check if the SLA file exists
    if (Test-Path -Path $slaFilePath) {
        # Read the content of the SLA file
        $slaContent = Get-Content -Path $slaFilePath

        # Convert the content to a datetime object
        $slaDatetime = [datetime]::ParseExact($slaContent, "yyyy-MM-dd HH:mm:ss", $null)

        # Get the current datetime
        $currentDatetime = Get-Date

        # Check if the SLA datetime is in the past
        if ($slaDatetime -lt $currentDatetime) {
            $endpoint = "$address"

            # Get a list of files in the directory that match your criteria
            $files = Get-ChildItem -Path $dir.FullName -File | Where-Object { $_.Name -like "*.txt" }

            # Create an array to store the file objects
            $fileObjects = @()
            foreach ($file in $files) {
                $fileObjects += @{
                    "filename" = $file.Name
                    "creationDate" = $file.CreationTime.ToString("yyyy-MM-ddTHH:mm:ss")
                }
            }

          
            $sla_error_array+= @{
                "folder" = $dir.Name
                "sla" = $slaContent
                "files" = $fileObjects
            }
         
        }
    }
}

$sla_error = @{
    "sla_error" = $sla_error_array
}

Write-Host "Sending"
Write-Host ($sla_error | ConvertTo-Json -Depth 4)

$response = Invoke-ApiPostRequest -Url $address -Body $sla_error
if ($response -ne $null) {
    Write-Host "API invoked successfully. Response: $response"
} else {
    Write-Host "API invocation failed."
}

